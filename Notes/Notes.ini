Begin met:
- SQL script database
- config.php
- Database.php
- User.php
- register.php


Verder werken:
- Er zijn geen restricties die gebruik maken van rollen. [x]
- account.php heeft wachtwoord, email, en naam eisen, maar deze komen niet terug in register.php en edit.php, waar ook deze gegevens aangepast/gemaakt kunnen worden. (Mischien functions maken?) [?]
- User.php heeft veel methods, Deze zijn niet gesoorteerd op functie, dus is het niet overzichtelijk. [x]
- CSRF-tokens? [?]

- Maybe make it so a user can not delete themselves, and the last admin can not delete themselves.
- Maybe make a helper functions that check emails, names, passwords so this is handled in one place.
[
    $email = trim($_POST['email'] ?? '');
    $id = isset($_POST['id']) ? (int)$_POST['id'] : null;
    
    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        setFlash("Ongeldig e-mailadres.", "error");
    } else {
        $existingUser = $id ? $userData->getUserById($id) : null;
    
        // Only check for duplicates if:
        // - User is being created (no $id)
        // - Email has changed during update
        if (!$existingUser || $email !== $existingUser['email']) {
            if ($userData->emailExists($email)) {
                setFlash("Dit e-mailadres is al in gebruik.", "error");
            } else {
                // Email is valid and unique
            }
        } else {
            // Email unchanged during update â€” skip uniqueness check
        }
    }

]

- Maybe change getUser to not always refresh. (Will require updating every instance where it needs to refresh)
[
    public function getUser(bool $refresh = false)
    {
        if (!$this->isLoggedIn()) {
            return null;
        }
    
        if (!$refresh && isset($_SESSION['user']['name'], $_SESSION ['user']['email'], $_SESSION['user']['role'])) {
            return $_SESSION['user'];
        }
    
        $sql = "
            SELECT u.id, u.name, u.email, r.role_name 
            FROM users u 
            JOIN roles r ON u.role_id = r.id 
            WHERE u.id = :id
        ";
        $stmt = $this->pdo->prepare($sql);
        $stmt->execute([':id' => $_SESSION['user']['id']]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
    
        if ($user) {
            $_SESSION['user'] = [
                'id'    => $user['id'],
                'name'  => $user['name'],
                'email' => $user['email'],
                'role'  => $user['role_name'],
            ];
        }
    
        return $_SESSION['user'];
    }
]