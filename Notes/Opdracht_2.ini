🔧 A. Autoloading instellen

    1. Maak init.php aan.
    2. Voeg toe in init.php:
        spl_autoload_register() voor autoloading van klassen.
        session_start().
        Databaseconfiguratie (bijv. PDO-verbinding).
    3. Vervang in elk script bovenaan require_once 'init.php';.
    4. Verwijder alle losse require-statements voor klassen (zoals User.php).

🔐 B. Rollen toevoegen (admin/user)

    1. Voeg kolom role (VARCHAR) toe aan je users-tabel.
    2. Zorg dat bij registratie de standaardrol user is.
    3. Voeg in Auth.php methode isAdmin() toe.
    4. Pas dashboard.php aan:
        Admin: ziet en beheert alle gebruikers.
        User: ziet alleen zijn eigen profiel.

🔔 C. Flashmeldingen tonen

    1. Voeg in functions.php een functie toe zoals setFlash($message) en getFlash().
    2. Toon de flashmelding bovenaan je pagina’s (template).
    3. Gebruik flashmeldingen bij acties zoals login, register, update, delete.

👤 D. Mijn account + wachtwoord wijzigen

    1. Maak account.php aan.
    2. Toon ingelogde gebruiker zijn gegevens (voornaam, achternaam, e-mail).
    3. Voeg formulier toe om profielgegevens te wijzigen.
    4. Voeg aparte sectie toe om wachtwoord te wijzigen:
        Eerst huidig wachtwoord invullen.
        Daarna nieuw wachtwoord (2x).
        Valideren, hashen en opslaan.
    5. Gebruik flashmelding voor feedback ("Wachtwoord gewijzigd").


📁 E. Bestandsstructuur uitbreiden

    Zorg voor deze structuur:
    ├── init.php
    ├── account.php
    ├── dashboard.php
    ├── classes/
    ├── includes/
    ├── templates/

✅ F. Belangrijke eisen

    Werk met OOP en PDO.
    Gebruik prepared statements.
    Voer input-validatie uit en gebruik htmlspecialchars().
    Test stap voor stap na elke wijziging.


🏁 G. Eindresultaat

    ✅ Nettere code door autoloading.
    ✅ Gebruikersrollen (admin/user).
    ✅ Gebruiker kan profiel + wachtwoord wijzigen.
    ✅ Acties geven duidelijke feedback via meldingen.